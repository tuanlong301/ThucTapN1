package com.example.appbanhang.user;

import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import java.util.HashMap;
import java.util.Map;

import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.appbanhang.BaseActivity;
import com.example.appbanhang.user.adapter.ProductAdapter;
import com.example.appbanhang.R;
import com.example.appbanhang.model.Product;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FieldValue;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.Query;
import com.google.firebase.firestore.SetOptions;

import java.util.ArrayList;
import java.util.List;

public class MainMenu extends BaseActivity {

    private RecyclerView rvProducts;
    private final List<Product> productList = new ArrayList<>();
    private ProductAdapter adapter;
    private FirebaseFirestore db;

    private int cartCount = 0;
    private TextView tvCartBadge;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tvCartBadge = findViewById(R.id.tvCartBadge);
        updateCartBadge();
        findViewById(R.id.btnCallStaff).setOnClickListener(v -> callStaff());

        rvProducts = findViewById(R.id.rvProducts);
        rvProducts.setLayoutManager(new GridLayoutManager(this, 3));
        adapter = new ProductAdapter(this, productList);
        rvProducts.setAdapter(adapter);
        adapter.setOnAddToCartListener(this::addToCart);
        findViewById(R.id.btnCart).setOnClickListener(v ->
                startActivity(new android.content.Intent(MainMenu.this, CartActivity.class)));

        db = FirebaseFirestore.getInstance();

        FirebaseAuth auth = FirebaseAuth.getInstance();
        if (auth.getCurrentUser() == null) {
            // Ch·ªâ d√πng ·∫©n danh khi th·∫≠t s·ª± ch∆∞a ƒëƒÉng nh·∫≠p
            auth.signInAnonymously()
                    .addOnSuccessListener(r -> initUIData())
                    .addOnFailureListener(e ->
                            Toast.makeText(this, "Auth FAIL: " + e.getMessage(), Toast.LENGTH_LONG).show());
        } else {
            initUIData();    // ƒë√£ ƒëƒÉng nh·∫≠p -> ch·∫°y lu√¥n
        }
    }

    // gom ph·∫ßn g√°n click + l·∫Øng nghe + load d·ªØ li·ªáu v√†o ƒë√¢y
    private void initUIData() {
        wireCategoryClicks();
        wireCategoryClicks1();
        wireCategoryClicks2();
        wireCategoryClicks3();

        listenCartCount();
        loadAll();
    }


    private void wireCategoryClicks() {
        View best = findViewById(R.id.btnBestSeller);
        if (best != null) best.setOnClickListener(v -> loadByCategory("bestseller"));

    }

    private void wireCategoryClicks1() {
        View best = findViewById(R.id.btnkm);
        if (best != null) best.setOnClickListener(v -> loadByCategory("km"));

    }
    private void wireCategoryClicks2() {
        View best = findViewById(R.id.btnCM);
        if (best != null) best.setOnClickListener(v -> loadByCategory("cm"));

    }
    private void wireCategoryClicks3() {
        View best = findViewById(R.id.btnNuoc);
        if (best != null) best.setOnClickListener(v -> loadByCategory("nuoc"));

    }

    /** Hi·ªÉn th·ªã t·∫•t c·∫£ m√≥n */
    private void loadAll() {
        db.collection("food_001")
                .orderBy("name", Query.Direction.ASCENDING)
                .get()
                .addOnSuccessListener(snap -> {
                    productList.clear();
                    for (DocumentSnapshot doc : snap.getDocuments()) {
                        Product p = doc.toObject(Product.class);
                        if (p != null) {
                            p.setId(doc.getId());              // <- L·∫§Y ID t√†i li·ªáu
                            productList.add(p);
                        }
                    }
                    adapter.notifyDataSetChanged();
                    Toast.makeText(this, "Loaded " + productList.size() + " items (all)", Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> {
                    Log.e("FIRESTORE", "READ FAIL", e);
                    Toast.makeText(this, "L·ªói t·∫£i d·ªØ li·ªáu: " + e.getMessage(), Toast.LENGTH_LONG).show();
                });
    }

    /** L·ªçc theo category */
    private void loadByCategory(String cat) {
        db.collection("food_001")
                .whereEqualTo("category", cat)
                .get()
                .addOnSuccessListener(snap -> {
                    productList.clear();
                    for (DocumentSnapshot d : snap.getDocuments()) {
                        Product p = d.toObject(Product.class);
                        if (p != null) {
                            p.setId(d.getId());               // <- nh·ªõ set id
                            productList.add(p);
                        }
                    }
                    // sort theo t√™n ·ªü client
                    java.util.Collections.sort(productList, (a, b) -> {
                        if (a.getName() == null) return -1;
                        if (b.getName() == null) return 1;
                        return a.getName().compareToIgnoreCase(b.getName());
                    });
                    adapter.notifyDataSetChanged();
                });
    }

    /** Ghi/ tƒÉng s·ªë l∆∞·ª£ng 1 m√≥n v√†o gi·ªè h√†ng Firestore */
    private void addToCart(Product p) {
        String uid = FirebaseAuth.getInstance().getCurrentUser().getUid();
        if (uid == null) {
            Toast.makeText(this, "Ch∆∞a ƒëƒÉng nh·∫≠p", Toast.LENGTH_SHORT).show();
            return;
        }
        if (p.getId() == null) {
            Toast.makeText(this, "Thi·∫øu ID s·∫£n ph·∫©m", Toast.LENGTH_SHORT).show();
            return;
        }

        java.util.Map<String, Object> data = new java.util.HashMap<>();
        data.put("name", p.getName());
        data.put("imageUrl", p.getImageUrl());
        data.put("price", p.getPrice());
        data.put("qty", FieldValue.increment(1));   // tƒÉng 1

        db.collection("carts").document(uid)
                .collection("items").document(p.getId())
                .set(data, SetOptions.merge())
                .addOnSuccessListener(v -> {
                    Toast.makeText(this, "ƒê√£ th√™m: " + p.getName(), Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e ->
                        Toast.makeText(this, "Th√™m gi·ªè h√†ng l·ªói: " + e.getMessage(), Toast.LENGTH_LONG).show());
    }

    /** L·∫Øng nghe t·ªïng s·ªë l∆∞·ª£ng trong gi·ªè ƒë·ªÉ c·∫≠p nh·∫≠t badge */
    private void listenCartCount() {
        String uid = FirebaseAuth.getInstance().getCurrentUser().getUid();
        db.collection("carts").document(uid).collection("items")
                .addSnapshotListener((snap, e) -> {
                    if (e != null || snap == null) return;
                    int sum = 0;
                    for (DocumentSnapshot d : snap.getDocuments()) {
                        Number q = (Number) d.get("qty");
                        sum += (q == null) ? 0 : q.intValue();
                    }
                    cartCount = sum;
                    updateCartBadge();
                });
    }

    private void updateCartBadge() {
        if (tvCartBadge == null) return;
        if (cartCount <= 0) {
            tvCartBadge.setVisibility(View.GONE);
        } else {
            tvCartBadge.setText(cartCount > 99 ? "99+" : String.valueOf(cartCount));
            tvCartBadge.setVisibility(View.VISIBLE);
        }
    }
    /**Goi nhan vien */

    private void callStaff() {
        if (!requireOnline()) {
            // üö® Kh√¥ng cho queue Firestore khi offline
            new androidx.appcompat.app.AlertDialog.Builder(this)
                    .setTitle("M·∫•t k·∫øt n·ªëi")
                    .setMessage("Kh√¥ng th·ªÉ g·ª≠i y√™u c·∫ßu khi m·∫•t m·∫°ng. Vui l√≤ng k·∫øt n·ªëi l·∫°i internet.")
                    .setPositiveButton("OK", null)
                    .show();
            return;
        }

        FirebaseAuth auth = FirebaseAuth.getInstance();
        if (auth.getCurrentUser() == null) {
            Toast.makeText(this, "Ch∆∞a ƒëƒÉng nh·∫≠p!", Toast.LENGTH_SHORT).show();
            return;
        }
        String uid = auth.getCurrentUser().getUid();
        FirebaseFirestore db = FirebaseFirestore.getInstance();

        // 1) Ch·ªëng spam 2 ph√∫t
        db.collection("staff_calls")
                .whereEqualTo("userId", uid)
                .orderBy("createdAt", Query.Direction.DESCENDING)
                .limit(1)
                .get()
                .addOnSuccessListener(snap -> {
                    long now = System.currentTimeMillis();
                    if (!snap.isEmpty()) {
                        java.util.Date t = snap.getDocuments().get(0).getDate("createdAt");
                        if (t != null && (now - t.getTime()) < 2 * 60 * 1000) {
                            new androidx.appcompat.app.AlertDialog.Builder(this)
                                    .setTitle("Vui l√≤ng ƒë·ª£i")
                                    .setMessage("B·∫°n ƒë√£ g·ªçi nh√¢n vi√™n g·∫ßn ƒë√¢y. Vui l√≤ng ch·ªù t·ªëi ƒëa 2 ph√∫t tr∆∞·ªõc khi g·ªçi l·∫°i.")
                                    .setPositiveButton("OK", null)
                                    .show();
                            return;
                        }
                    }

                    // 2) L·∫•y t√™n b√†n t·ª´ collection acc
                    db.collection("acc")
                            .whereEqualTo("uid", uid)   // t√¨m doc c√≥ field uid = current uid
                            .limit(1)
                            .get()
                            .addOnSuccessListener(accSnap -> {
                                String tableName = "Kh√°ch";
                                if (!accSnap.isEmpty()) {
                                    tableName = accSnap.getDocuments().get(0).getString("name");
                                    if (tableName == null || tableName.trim().isEmpty()) {
                                        tableName = "Kh√°ch";
                                    }
                                }

                                // 3) T·∫°o request g·ªçi NV
                                Map<String, Object> call = new HashMap<>();
                                call.put("userId", uid);
                                call.put("name", tableName);   // <-- l∆∞u ƒë√∫ng field name
                                call.put("createdAt", FieldValue.serverTimestamp());
                                call.put("status", "queued");

                                db.collection("staff_calls")
                                        .add(call)
                                        .addOnSuccessListener(ref ->
                                                new androidx.appcompat.app.AlertDialog.Builder(this)
                                                        .setTitle("ƒê√£ g·ª≠i y√™u c·∫ßu")
                                                        .setMessage("ƒê√£ th√¥ng b√°o cho nh√¢n vi√™n. Vui l√≤ng ƒë·ª£i.")
                                                        .setPositiveButton("OK", null)
                                                        .show())
                                        .addOnFailureListener(e ->
                                                Toast.makeText(this, "L·ªói g·ª≠i y√™u c·∫ßu: " + e.getMessage(), Toast.LENGTH_LONG).show());
                            })
                            .addOnFailureListener(e ->
                                    Toast.makeText(this, "L·ªói l·∫•y th√¥ng tin b√†n: " + e.getMessage(), Toast.LENGTH_LONG).show());
                })
                .addOnFailureListener(e ->
                        Toast.makeText(this, "L·ªói ki·ªÉm tra l·ªãch s·ª≠ g·ªçi: " + e.getMessage(), Toast.LENGTH_LONG).show());
    }

}


